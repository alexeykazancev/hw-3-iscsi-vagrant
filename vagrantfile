Vagrant.configure("2") do |config|
    config.vm.box = "boxomatic/rocky-8"
    config.vm.box_url = "file://rocky-8.box"
        config.vm.define "node01" do |node|
            node.vm.provider "virtualbox" do |vb|
                vb.name = "node01"
                vb.memory = 2048
                vb.cpus = 2
            end

            node.vm.hostname = "node01"
            #node.vm.network "private_network", adapter: 2, :device => "eth2", auto_config: true, virtualbox__intnet: "internal-net"
            node.vm.network "private_network", adapter: 2, :device => "eth2", ip: "192.168.56.101", virtualbox__vboxnet0: "virtual-host-adapter"
            #node.vm.network "forwarded_port", guest: 22, guest_ip: "192.168.56.1", host: "2280"

            node.vm.provision "shell", inline: <<-SHELL
              #dnf update -y
              dnf install curl wget mc nano sudo git rsync gfs2-utils lvm2-lockd sanlock -y
              mkdir -p ~root/.ssh
              cp ~vagrant/.ssh/auth* ~root/.ssh/
              systemctl enable chronyd && systemctl start chronyd
              
            SHELL
        
        end

        config.vm.define "node02" do |node|
            node.vm.provider "virtualbox" do |vb|
                vb.name = "node02"
                vb.memory = 2048
                vb.cpus = 2
            end

            node.vm.hostname = "node02"
            #node.vm.network "private_network", adapter: 2, :device => "eth1", auto_config: true, virtualbox__intnet: "internal-net"
            node.vm.network "private_network", adapter: 2, :device => "eth2", ip: "192.168.56.102", virtualbox__vboxnet0: "virtual-host-adapter"
            #node.vm.network "forwarded_port", guest: 22, guest_ip: "192.168.56.4", host: "2236"

            node.vm.provision "shell", inline: <<-SHELL
              #dnf update -y
              dnf install curl wget mc nano sudo git rsync gfs2-utils lvm2-lockd sanlock -y
              mkdir -p ~root/.ssh
              cp ~vagrant/.ssh/auth* ~root/.ssh/
              systemctl enable chronyd && systemctl start chronyd

            SHELL
               
        end

        config.vm.define "node03" do |node|
            node.vm.provider "virtualbox" do |vb|
                vb.name = "node03"
                vb.memory = 2048
                vb.cpus = 2
            end

            node.vm.hostname = "node03"
            #node.vm.network "private_network", adapter: 2, :device => "eth1", auto_config: true, virtualbox__intnet: "internal-net"
            node.vm.network "private_network", adapter: 2, :device => "eth2", ip: "192.168.56.103", virtualbox__vboxnet0: "virtual-host-adapter"
            #node.vm.network "forwarded_port", guest: 22, guest_ip: "192.168.56.5", host: "2237"

            node.vm.provision "shell", inline: <<-SHELL
              #dnf update -y
              dnf install curl wget mc nano sudo git rsync gfs2-utils lvm2-lockd sanlock -y
              mkdir -p ~root/.ssh
              cp ~vagrant/.ssh/auth* ~root/.ssh/
              systemctl enable chronyd && systemctl start chronyd

            SHELL
               
        end

    
        config.vm.define "node-iscsi" do |node|
            node.vm.provider "virtualbox" do |vb|
                vb.name = "node-iscsi"
                vb.memory = 2048
                vb.cpus = 2
            end

            node.vm.hostname = "node-iscsi"
            #node.vm.network "private_network", adapter: 1, :device => "eth1", auto_config: true, virtualbox__intnet: "internal-net"
            node.vm.network "private_network", adapter: 2, :device => "eth2", ip: "192.168.56.104", virtualbox__vboxnet0: "virtual-host-adapter"
            #node.vm.network "forwarded_port", guest: 22, guest_ip: "192.168.56.6", host: "2238"

            node.vm.provision "shell", inline: <<-SHELL
              #dnf update -y
              dnf install curl wget mc nano sudo git rsync iscsi-initiator-utils -y
              echo InitiatorName=iqn.2023-12.srv:56.104 | tee -a /etc/iscsi/initiatorname.iscsi
              mkdir -p ~root/.ssh
              cp ~vagrant/.ssh/auth* ~root/.ssh/
              
            SHELL
                
        end
        
        #config.vm.provision "shell", run: "always", inline: <<-SHELL
        #  mkdir -p ~root/.ssh
        #  cp ~vagrant/.ssh/auth* ~root/.ssh
        #SHELL
        
end